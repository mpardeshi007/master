{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\797609\\\\Downloads\\\\BNY team project - backup\\\\ui-code-base\\\\src\\\\components\\\\LoadingSpinner.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingSpinner = ({\n  size = 'medium',\n  color = '#007bff'\n}) => {\n  const sizeMap = {\n    small: '20px',\n    medium: '40px',\n    large: '60px'\n  };\n  const spinnerStyle = {\n    width: sizeMap[size],\n    height: sizeMap[size],\n    border: `3px solid #f3f3f3`,\n    borderTop: `3px solid ${color}`,\n    borderRadius: '50%',\n    animation: 'spin 1s linear infinite',\n    display: 'inline-block'\n  };\n  const containerStyle = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '20px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: spinnerStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = LoadingSpinner;\nexport default LoadingSpinner;\nvar _c;\n$RefreshReg$(_c, \"LoadingSpinner\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LoadingSpinner","size","color","sizeMap","small","medium","large","spinnerStyle","width","height","border","borderTop","borderRadius","animation","display","containerStyle","justifyContent","alignItems","padding","style","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/797609/Downloads/BNY team project - backup/ui-code-base/src/components/LoadingSpinner.js"],"sourcesContent":["import React from 'react';\n\nconst LoadingSpinner = ({ size = 'medium', color = '#007bff' }) => {\n  const sizeMap = {\n    small: '20px',\n    medium: '40px',\n    large: '60px'\n  };\n\n  const spinnerStyle = {\n    width: sizeMap[size],\n    height: sizeMap[size],\n    border: `3px solid #f3f3f3`,\n    borderTop: `3px solid ${color}`,\n    borderRadius: '50%',\n    animation: 'spin 1s linear infinite',\n    display: 'inline-block'\n  };\n\n  const containerStyle = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '20px'\n  };\n\n  return (\n    <div style={containerStyle}>\n      <div style={spinnerStyle}></div>\n      <style>\n        {`\n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n        `}\n      </style>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAC;EAAEC,IAAI,GAAG,QAAQ;EAAEC,KAAK,GAAG;AAAU,CAAC,KAAK;EACjE,MAAMC,OAAO,GAAG;IACdC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACT,CAAC;EAED,MAAMC,YAAY,GAAG;IACnBC,KAAK,EAAEL,OAAO,CAACF,IAAI,CAAC;IACpBQ,MAAM,EAAEN,OAAO,CAACF,IAAI,CAAC;IACrBS,MAAM,EAAE,mBAAmB;IAC3BC,SAAS,EAAE,aAAaT,KAAK,EAAE;IAC/BU,YAAY,EAAE,KAAK;IACnBC,SAAS,EAAE,yBAAyB;IACpCC,OAAO,EAAE;EACX,CAAC;EAED,MAAMC,cAAc,GAAG;IACrBD,OAAO,EAAE,MAAM;IACfE,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE;EACX,CAAC;EAED,oBACEnB,OAAA;IAAKoB,KAAK,EAAEJ,cAAe;IAAAK,QAAA,gBACzBrB,OAAA;MAAKoB,KAAK,EAAEZ;IAAa;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAChCzB,OAAA;MAAAqB,QAAA,EACG;AACT;AACA;AACA;AACA;AACA;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACC,EAAA,GArCIzB,cAAc;AAuCpB,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}