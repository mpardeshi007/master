{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\797609\\\\Downloads\\\\BNY team project - backup\\\\ui-code-base\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport authService from '../services/authService';\n\n// Initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  loading: true,\n  error: null\n};\n\n// Action types\nconst AUTH_ACTIONS = {\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  LOGOUT: 'LOGOUT',\n  SET_LOADING: 'SET_LOADING',\n  CLEAR_ERROR: 'CLEAR_ERROR',\n  SET_USER: 'SET_USER'\n};\n\n// Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.LOGIN_START:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.payload.user,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_FAILURE:\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null,\n        loading: false,\n        error: action.payload.error\n      };\n    case AUTH_ACTIONS.LOGOUT:\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n    case AUTH_ACTIONS.SET_USER:\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.payload,\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// Auth Provider component\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Initialize auth state on component mount\n  useEffect(() => {\n    const initializeAuth = async () => {\n      try {\n        dispatch({\n          type: AUTH_ACTIONS.SET_LOADING,\n          payload: true\n        });\n        if (authService.isAuthenticated()) {\n          // Validate token with backend\n          await authService.validateToken();\n          const user = authService.getCurrentUser();\n          if (user) {\n            dispatch({\n              type: AUTH_ACTIONS.SET_USER,\n              payload: user\n            });\n          } else {\n            dispatch({\n              type: AUTH_ACTIONS.LOGOUT\n            });\n          }\n        } else {\n          dispatch({\n            type: AUTH_ACTIONS.LOGOUT\n          });\n        }\n      } catch (error) {\n        console.error('Auth initialization failed:', error);\n        dispatch({\n          type: AUTH_ACTIONS.LOGIN_FAILURE,\n          payload: {\n            error: error.message\n          }\n        });\n        authService.logout();\n      } finally {\n        dispatch({\n          type: AUTH_ACTIONS.SET_LOADING,\n          payload: false\n        });\n      }\n    };\n    initializeAuth();\n  }, []);\n\n  // Login function\n  const login = async (username, password) => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_START\n      });\n      const response = await authService.login(username, password);\n      const user = {\n        username: response.username,\n        roles: response.roles\n      };\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: {\n          user\n        }\n      });\n      return response;\n    } catch (error) {\n      console.error('Login failed:', error);\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: {\n          error: error.message\n        }\n      });\n      throw error;\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    authService.logout();\n    dispatch({\n      type: AUTH_ACTIONS.LOGOUT\n    });\n  };\n\n  // Clear error function\n  const clearError = () => {\n    dispatch({\n      type: AUTH_ACTIONS.CLEAR_ERROR\n    });\n  };\n\n  // Check if user has specific role\n  const hasRole = role => {\n    return state.user && state.user.roles && state.user.roles.includes(role);\n  };\n\n  // Check if user is admin\n  const isAdmin = () => {\n    return hasRole('ADMIN');\n  };\n\n  // Make authenticated API request\n  const makeAuthenticatedRequest = async (url, options) => {\n    try {\n      return await authService.makeAuthenticatedRequest(url, options);\n    } catch (error) {\n      if (error.message.includes('Session expired')) {\n        logout();\n      }\n      throw error;\n    }\n  };\n\n  // Context value\n  const value = {\n    // State\n    isAuthenticated: state.isAuthenticated,\n    user: state.user,\n    loading: state.loading,\n    error: state.error,\n    // Actions\n    login,\n    logout,\n    clearError,\n    hasRole,\n    isAdmin,\n    makeAuthenticatedRequest,\n    // Utilities\n    getToken: authService.getToken,\n    getAuthHeader: authService.getAuthHeader\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authService","jsxDEV","_jsxDEV","initialState","isAuthenticated","user","loading","error","AUTH_ACTIONS","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","SET_LOADING","CLEAR_ERROR","SET_USER","authReducer","state","action","type","payload","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","dispatch","initializeAuth","validateToken","getCurrentUser","console","message","logout","login","username","password","response","roles","clearError","hasRole","role","includes","isAdmin","makeAuthenticatedRequest","url","options","value","getToken","getAuthHeader","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/797609/Downloads/BNY team project - backup/ui-code-base/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport authService from '../services/authService';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: null,\r\n  loading: true,\r\n  error: null\r\n};\r\n\r\n// Action types\r\nconst AUTH_ACTIONS = {\r\n  LOGIN_START: 'LOGIN_START',\r\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\r\n  LOGOUT: 'LOGOUT',\r\n  SET_LOADING: 'SET_LOADING',\r\n  CLEAR_ERROR: 'CLEAR_ERROR',\r\n  SET_USER: 'SET_USER'\r\n};\r\n\r\n// Reducer\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case AUTH_ACTIONS.LOGIN_START:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        user: action.payload.user,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case AUTH_ACTIONS.LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        user: null,\r\n        loading: false,\r\n        error: action.payload.error\r\n      };\r\n    case AUTH_ACTIONS.LOGOUT:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        user: null,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case AUTH_ACTIONS.SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.payload\r\n      };\r\n    case AUTH_ACTIONS.CLEAR_ERROR:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    case AUTH_ACTIONS.SET_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        user: action.payload,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Create context\r\nconst AuthContext = createContext();\r\n\r\n// Custom hook to use auth context\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n// Auth Provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Initialize auth state on component mount\r\n  useEffect(() => {\r\n    const initializeAuth = async () => {\r\n      try {\r\n        dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\r\n\r\n        if (authService.isAuthenticated()) {\r\n          // Validate token with backend\r\n          await authService.validateToken();\r\n          const user = authService.getCurrentUser();\r\n          \r\n          if (user) {\r\n            dispatch({ \r\n              type: AUTH_ACTIONS.SET_USER, \r\n              payload: user \r\n            });\r\n          } else {\r\n            dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n          }\r\n        } else {\r\n          dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n        }\r\n      } catch (error) {\r\n        console.error('Auth initialization failed:', error);\r\n        dispatch({ \r\n          type: AUTH_ACTIONS.LOGIN_FAILURE, \r\n          payload: { error: error.message } \r\n        });\r\n        authService.logout();\r\n      } finally {\r\n        dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\r\n      }\r\n    };\r\n\r\n    initializeAuth();\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (username, password) => {\r\n    try {\r\n      dispatch({ type: AUTH_ACTIONS.LOGIN_START });\r\n\r\n      const response = await authService.login(username, password);\r\n      const user = {\r\n        username: response.username,\r\n        roles: response.roles\r\n      };\r\n\r\n      dispatch({ \r\n        type: AUTH_ACTIONS.LOGIN_SUCCESS, \r\n        payload: { user } \r\n      });\r\n\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Login failed:', error);\r\n      dispatch({ \r\n        type: AUTH_ACTIONS.LOGIN_FAILURE, \r\n        payload: { error: error.message } \r\n      });\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    authService.logout();\r\n    dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n  };\r\n\r\n  // Clear error function\r\n  const clearError = () => {\r\n    dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\r\n  };\r\n\r\n  // Check if user has specific role\r\n  const hasRole = (role) => {\r\n    return state.user && state.user.roles && state.user.roles.includes(role);\r\n  };\r\n\r\n  // Check if user is admin\r\n  const isAdmin = () => {\r\n    return hasRole('ADMIN');\r\n  };\r\n\r\n  // Make authenticated API request\r\n  const makeAuthenticatedRequest = async (url, options) => {\r\n    try {\r\n      return await authService.makeAuthenticatedRequest(url, options);\r\n    } catch (error) {\r\n      if (error.message.includes('Session expired')) {\r\n        logout();\r\n      }\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Context value\r\n  const value = {\r\n    // State\r\n    isAuthenticated: state.isAuthenticated,\r\n    user: state.user,\r\n    loading: state.loading,\r\n    error: state.error,\r\n\r\n    // Actions\r\n    login,\r\n    logout,\r\n    clearError,\r\n    hasRole,\r\n    isAdmin,\r\n    makeAuthenticatedRequest,\r\n\r\n    // Utilities\r\n    getToken: authService.getToken,\r\n    getAuthHeader: authService.getAuthHeader\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}